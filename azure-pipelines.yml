# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: 
  vmImage: macos-latest
  
steps:
  - bash: |
      sh -c "echo \"y\" | $ANDROID_HOME/tools/bin/sdkmanager \"emulator\" \"system-images;android-30;google_apis_playstore;x86\""
  - bash: |
      $ANDROID_HOME/tools/bin/avdmanager delete avd -n DEVICE_TESTS_EMULATOR
      $ANDROID_HOME/tools/bin/avdmanager create avd -n DEVICE_TESTS_EMULATOR -k "system-images;android-30;google_apis_playstore;x86" --device "Nexus 5X" --force
      $ANDROID_HOME/emulator/emulator -accel-check
  - bash: |
      $ANDROID_HOME/emulator/emulator -avd DEVICE_TESTS_EMULATOR -no-window -no-boot-anim -accel on
      # nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -wipe-data -no-window -skin 1080x1920 -no-snapshot -no-audio -no-boot-anim -accel on > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'
      $ANDROID_HOME/platform-tools/adb devices

# pool:
#   vmImage: macos-latest
  
# steps:
#   - bash: |
#       ls -l /Library/Frameworks/Mono.framework/Versions
#       ls -l /Library/Frameworks/Xamarin.iOS.framework/Versions
#       ls -l /Library/Frameworks/Xamarin.Android.framework/Versions
#       ls -l /Library/Frameworks/Xamarin.Mac.framework/Versions

# steps:
#  - pwsh: .\install-vs.ps1
#  - script: |
#      dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC"
